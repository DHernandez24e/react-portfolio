{"version":3,"sources":["components/Navigation/index.js","components/Header/index.js","components/Footer/index.js","components/Project/index.js","components/Portfolio/index.js","components/Contact/index.js","components/About/index.js","components/Resume/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","map","link","key","href","toLowerCase","onClick","setCurrentPage","currentPage","Header","Footer","aria-hidden","Project","id","name","description","repo_link","style","fontSize","live_link","Portfolio","projectList","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","evt","target","isValid","test","String","validateEmail","value","length","onSubmit","preventDefault","console","log","alert","htmlFor","type","defaultValue","onBlur","rows","About","Resume","App","useEffect","document","title","Contact","renderPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.734bfe10.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Nav(props) {\n    const links = ['About', 'Projects', 'Contact', 'Resume']\n\n    return(\n            <ul className='nav nav-pills nav-fill'>\n                {links.map(link => (\n                    <li className='nav-item' key={link}>\n                        <a\n                            href={'#' + link.toLowerCase()}\n                            onClick={() => props.setCurrentPage(link)}\n                            className={\n                                props.currentPage === link ? 'nav-link active' : 'nav-link font-weight-bold'\n                            }\n                        >\n                        {link}    \n                        </a>\n                    </li>\n                ))}\n            </ul>\n    );\n}\n\nexport default Nav;","import React from 'react';\nimport Nav from '../Navigation';\n\nfunction Header(props) {\n    const { currentPage, setCurrentPage } = props\n\n    return(\n        <header className='d-flex justify-content-between p-5 bg-secondary'>\n            <h2 className='text-primary'>Diego Hernandez's Portfolio</h2>\n            <Nav currentPage={currentPage} setCurrentPage={setCurrentPage}></Nav>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n\n    return(\n        <footer className='bg-secondary p-4 text-center'>\n            <a href='https://github.com/DHernandez24e' className='h1 p-2'>\n                <i className='fa fa-github' aria-hidden='true'></i>\n            </a>\n            <a href='https://www.linkedin.com/in/diego-hernandez-7627531a2/' className='h1 p-2'>\n                <i className='fa fa-linkedin-square' aria-hidden='true'></i>\n            </a>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction Project(props) {\n\n    return(\n        <div className='col-sm-6 project-tile justify-content-center' key={props.id}>\n            <div className={`image-${props.id} project-img m-2 p-3 w-75 rounded-lg`}>\n                <div>\n                    <h2>{props.name}</h2>\n                    <p>{props.description}</p>\n                    <a href={props.repo_link}>\n                        <i className=\"fa fa-github px-2\" aria-hidden=\"true\" style={{ fontSize: '40px' }}></i>\n                    </a>\n                    <a href={props.live_link}>\n                        <i className=\"fa fa-globe px-2\" aria-hidden=\"true\" style={{ fontSize: '40px' }}></i>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Project;","import React from 'react';\nimport Project from '../Project';\nimport projectList from '../../project-info.json';\n\nfunction Portfolio() {\n    const renderProject = (projectList) => {\n        return(\n            <Project\n                id={projectList.id}\n                key={projectList.id}\n                name={projectList.name}\n                description={projectList.description}\n                repo_link={projectList.repo_link}\n                live_link={projectList.live_link}\n            />\n        )\n    }\n\n    return(\n        <section className='p-4 bg-success container-fluid justify-content-center'>\n            <div className='row'>\n                {projectList.map(renderProject)}\n            </div>\n        </section>\n    )\n}\n\nexport default Portfolio;","import React, { useState } from 'react';\n\nfunction ContactForm() {\n    //Form State when load\n    const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n    //Error message State\n    const [errorMessage, setErrorMessage] = useState('');\n    //Destructured formState\n    const { name, email, message } = formState;\n    //Function to handle email verification\n    function validateEmail(email) {\n        var res = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return res.test(String(email).toLowerCase());\n    };\n    //Function to handle change in forms\n    function handleChange(evt) {\n        if (evt.target.name ===  'email') {\n            const isValid = validateEmail(evt.target.value);\n            \n            if (!isValid) {\n                setErrorMessage('Your email is invalid, please enter a valid email.')\n            } else {\n                setErrorMessage('');\n            }\n        } else {\n            if (!evt.target.value.length) {\n                setErrorMessage(`${evt.target.name} is required.`)\n            } else {\n                setErrorMessage('')\n            }\n        }\n\n        if (!errorMessage) {\n            setFormState({ ...formState, [evt.target.name]: evt.target.value });\n        }\n    };\n    //Function to handle submission\n    function handleSubmit(evt) {\n        evt.preventDefault();\n        console.log(formState);\n        alert('Thank you for submitting!');\n    }\n\n    return(\n        <section className='m-3 p-4 h-75 bg-success'>\n            <h1>Contact Me</h1>\n            <form id='contact-form' onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor='name'>Name:</label>\n                    <input className='form-control' type='text' name='name' defaultValue={name} onBlur={handleChange} />\n                </div>\n                <div>\n                    <label htmlFor='email'>Email Address:</label>\n                    <input className='form-control' type='email' name='email' defaultValue={email} onBlur={handleChange}/>\n                </div>\n                <div>\n                    <label htmlFor='message'>Message:</label>\n                    <textarea className='form-control' name='message' rows='5' defaultValue={message} onBlur={handleChange}/>\n                </div>\n                {errorMessage && (\n                    <div>\n                        <p className='font-weight-bold'>{errorMessage}</p>\n                    </div>\n                )}\n                <button className='btn btn-secondary' type='submit'>Submit</button>\n            </form>\n        </section>\n    )\n};\n\nexport default ContactForm;","import React from 'react';\n\nfunction About() {\n    return(\n        <section className='m-3 p-4 h-75 bg-success'>\n            <h3>About Me</h3>\n            <p className='p-3'>Thank you for visiting my page! My name is Diego Hernandez, and I am a budding web developer looking to \n                dive into expanding my horizons in this ever-growing field. I started learning about coding programs in\n                high school but did not pursue it later on due to getting into different job fields. I started learning about\n                full-stack web development through UC Berkeley Extension by the form of a 6 month bootcamp, where we picked up\n                various skills, most notably learning the MERN stack. My ambition is to use said acquired skills and devote them\n                to developing applications for tech companies and personal projects alike.\n                <br />\n                In my free time when I'm not coding or working my full-time, I like to relax and play music, spend time with my family\n                and watch horror films for fun.\n            </p>\n        </section>\n    )\n}\n\nexport default About;","import React from 'react';\n\nfunction Resume() {\n    return(\n        <section className='m-3 p-4 h-75 bg-success'>\n            <h3>Resume</h3>\n            {/* <a href='/'>Download my resume</a> */}\n            <h3>Front End Technologies:</h3>\n            <ul>\n                <li>HTML</li>\n                <li>CSS</li>\n                <li>JavaScript</li>\n                <li>jQuery</li>\n                <li>Bootstrap</li>\n                <li>React</li>\n            </ul>\n            <h3>Back End Technologies:</h3>\n            <ul>\n                <li>Node.js</li>\n                <li>MongoDB</li>\n                <li>SQL/Sequelize</li>\n                <li>noSQL/Mongoose</li>\n                <li>Express.js</li>\n            </ul>\n        </section>\n    )\n}\n\nexport default Resume;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './bootstrap.css'\nimport '../src/assets/css/font-awesome-4.7.0/css/font-awesome.css'\nimport Header from '../src/components/Header';\nimport Footer from '../src/components/Footer';\nimport Portfolio from '../src/components/Portfolio';\nimport Contact from '../src/components/Contact';\nimport About from '../src/components/About';\nimport Resume from '../src/components/Resume';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('About')\n\n    const renderPage = () => {\n      switch (currentPage) {\n        case 'About':\n          return <About/>\n        case 'Projects':\n          return <Portfolio/>\n        case 'Contact':\n          return <Contact/>\n        case 'Resume':\n          return <Resume/>\n        default:\n            return <About/>\n      }\n    }\n\n    useEffect(() => {\n      document.title = currentPage\n    })\n\n  return (\n    <div className='bg-primary'>\n      <Header currentPage={currentPage} setCurrentPage={setCurrentPage} />\n      <div className='vh-100 overflow-auto'>\n        {renderPage()}\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}